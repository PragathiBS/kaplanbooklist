{"version":3,"sources":["components/BooksNavbar.js","components/BookCard.js","components/CourseCards.js","components/SearchBar.js","fakeBooksService.js","common/AlertNotification.js","components/ContentArea.js","common/Input.js","components/AddBookForm.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["BooksNavbar","props","location","useLocation","Navbar","className","bg","variant","expand","Container","fluid","to","Brand","pathname","Button","BookCard","Card","style","width","Body","Title","title","Text","authors","publisher","publishedDate","CourseCards","data","map","bookData","index","volumeInfo","toString","SearchBar","searchData","onInputSearchData","type","onChange","value","name","placeholder","booksInfo","isAdded","getBooks","AlertNotification","handleShow","text","Row","Col","xs","Alert","onClose","dismissible","Heading","ContentArea","matchedBooks","history","useState","booksData","setBooksData","inputVal","setInputVal","alert","setAlert","useEffect","console","log","length","setTimeout","fetch","then","response","json","val","items","catch","error","event","target","filter","book","toLowerCase","includes","Input","label","Form","Group","Label","htmlFor","Control","id","AddBookForm","match","errorData","setBookData","path","ex","replace","populateBookData","schema","Joi","string","required","validate","abortEarly","errors","details","item","message","handleChange","errorMessage","obj","requiredSchema","validateProperty","prevBookData","onSubmit","preventDefault","split","disabled","NotFound","App","Fragment","component","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.125adadc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar, Button, Container} from 'react-bootstrap';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nfunction BooksNavbar(props) {\r\n    const location = useLocation();\r\n    return (\r\n        <Navbar className=\"mb-2\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Container fluid>\r\n                <Link to=\"/\">\r\n                    <Navbar.Brand className=\"ml-2\"><b>Books</b></Navbar.Brand>\r\n                </Link>\r\n                {\r\n                    location.pathname === \"/booklist\" &&\r\n                    (\r\n                        <Link to=\"/form/new\">\r\n                            <Button variant=\"primary\">Create New Book</Button>\r\n                        </Link>\r\n                    )\r\n                }\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default BooksNavbar;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction BookCard(props) {\r\n    return (\r\n      <Card style={{ width: \"18rem\" }} className=\"card\">\r\n        <Card.Body>\r\n          <Card.Title>{props.title}</Card.Title>\r\n          <Card.Text>Authors: {props.authors}</Card.Text>\r\n          <Card.Text>Publisher: {props.publisher}</Card.Text>\r\n          <Card.Text>Published Date: {props.publishedDate}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n}\r\n\r\nexport default BookCard;","import React from 'react';\r\nimport BookCard from './BookCard';\r\n\r\nfunction CourseCards({data}) {\r\n    const displayCourseCards = (bookData, index) => {\r\n        return (\r\n            <BookCard \r\n                key={index}\r\n                title={bookData.volumeInfo.title}\r\n                authors={bookData.volumeInfo.authors.toString()}\r\n                publisher={bookData.volumeInfo.publisher}\r\n                publishedDate={bookData.volumeInfo.publishedDate}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"grid\">\r\n            { data.map(displayCourseCards) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseCards;","import React from 'react';\r\n\r\nfunction SearchBar({searchData, onInputSearchData}) {\r\n    return (\r\n        <form>\r\n            <div className=\"input-wrapper m-3\">\r\n                <input type=\"text\" onChange={onInputSearchData} value={searchData} className=\"search\" name=\"search\" placeholder=\"Search by title, author or publisher\"/>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","let booksInfo = [];\r\nlet isAdded = false;\r\n \r\nexport function getBooks() {\r\n  return booksInfo;\r\n}\r\n \r\nexport function addBooksFromAPI(val) {\r\n  booksInfo = [...val];\r\n}\r\n \r\nexport function addNewBook(val) {\r\n    booksInfo = [val, ...booksInfo];\r\n    isAdded = true\r\n}\r\n\r\nexport function bookAdded()   {\r\n  return isAdded;\r\n}\r\n\r\nexport function setIsBookAdded()   {\r\n  isAdded = false;\r\n}","import React from 'react';\r\nimport { Alert, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction AlertNotification({ variant, handleShow, text }) {\r\n    return (\r\n      <Row>\r\n        <Col xs={6}>\r\n        <Alert variant={variant} onClose={() => handleShow(false)} dismissible>\r\n          <Alert.Heading>{text}</Alert.Heading>\r\n        </Alert>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\nexport default AlertNotification;","import React, { useEffect, useState } from 'react';\r\nimport CourseCards from './CourseCards';\r\nimport SearchBar from './SearchBar';\r\nimport { Container } from 'react-bootstrap';\r\nimport { addBooksFromAPI, getBooks, bookAdded, setIsBookAdded } from './../fakeBooksService';\r\nimport AlertNotification from '../common/AlertNotification';\r\n\r\nfunction ContentArea({history}) {\r\n    const [booksData, setBooksData] = useState([]);\r\n    const [inputVal, setInputVal] = useState(\"\");\r\n    const [alert, setAlert] = useState(false);\r\n    let matchedBooks;\r\n    \r\n    useEffect(() => {\r\n      console.log(history)\r\n      if(getBooks().length === 0) {\r\n        fetch('https://www.googleapis.com/books/v1/volumes?q=kaplan%20test%20prep')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            addBooksFromAPI(data.items);\r\n            setBooksData(getBooks());\r\n        })\r\n        .catch(error => console.log(error));\r\n        return;\r\n      }\r\n      setBooksData(getBooks());\r\n      if (bookAdded() === true) {\r\n        setAlert(true);\r\n        setTimeout(() => {\r\n          setAlert(false);\r\n        }, 3000);\r\n        setIsBookAdded();\r\n      }\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setInputVal(event.target.value);\r\n        matchedBooks = getBooks().filter((book) => {\r\n          return (\r\n            book.volumeInfo.title\r\n              .toLowerCase()\r\n              .includes(event.target.value.toLowerCase()) ||\r\n            book.volumeInfo.authors\r\n              .toString()\r\n              .toLowerCase()\r\n              .includes(event.target.value.toLowerCase()) ||\r\n            book.volumeInfo.publisher\r\n              .toLowerCase()\r\n              .includes(event.target.value.toLowerCase())\r\n          );\r\n        });\r\n        setBooksData(matchedBooks);\r\n      };\r\n\r\n    return (\r\n      <Container>\r\n          {\r\n            alert && (\r\n            <AlertNotification\r\n              variant=\"success\"\r\n              handleShow={setAlert}\r\n              text={\"Successful! Added a new book.\"}\r\n            />\r\n          )\r\n        }\r\n        <SearchBar searchData={inputVal} onInputSearchData={handleChange}/>\r\n        {\r\n          booksData.length > 0 ?\r\n          <div>\r\n            <p className=\"ml-3\"> Showing {booksData.length} out of {getBooks().length} books. </p>\r\n            <h5 className=\"mx-3 mt-3 mb-2\">All Books</h5>\r\n            <CourseCards data={booksData}/>\r\n          </div> :\r\n          <p className=\"ml-3\"> No books available. </p>\r\n        }\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default ContentArea;","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nfunction Input({ name, value, label, error, onChange }) {\r\n  return (\r\n    <Form.Group>\r\n      <Form.Label htmlFor={name}>{label}</Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        value={value}\r\n        name={name}\r\n        id={name}\r\n        onChange={onChange}\r\n        placeholder={`Enter ${label}`}\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </Form.Group>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport Input from \"./../common/Input\";\r\nimport { addNewBook } from \"./../fakeBooksService\";\r\n\r\nconst AddBookForm = ({ history, match }) => {\r\n  const [{ bookData, errorData }, setBookData] = useState({\r\n    bookData: { title: \"\", authors: \"\", publisher: \"\", publishedDate: \"\" },\r\n    errorData: {},\r\n  });\r\n\r\n  function populateBookData() {\r\n    try {\r\n      if (match.path === \"/form/new\") {\r\n        setBookData(() => {\r\n          return {\r\n            bookData: {\r\n              title: \"\",\r\n              authors: \"\",\r\n              publisher: \"\",\r\n              publishedDate: \"\",\r\n            },\r\n            errorData: {},\r\n          };\r\n        });\r\n        return;\r\n      }\r\n    } catch (ex) {\r\n        history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    populateBookData();\r\n  }, []);\r\n\r\n  const schema = {\r\n    title: Joi.string().required().label(\"Title\"),\r\n    authors: Joi.string().required().label(\"Authors\"),\r\n    publisher: Joi.string().required().label(\"Publisher\"),\r\n    publishedDate: Joi.string().required().label(\"Published Date\"),\r\n  };\r\n\r\n  function validate() {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(bookData, schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  }\r\n\r\n  function validateProperty(name, value) {\r\n    const obj = { [name]: value };\r\n    const requiredSchema = { [name]: schema[name] };\r\n    const { error } = Joi.validate(obj, requiredSchema);\r\n    return error ? error.details[0].message : null;\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const errors = { ...errorData };\r\n    const errorMessage = validateProperty(name, value);\r\n    if (errorMessage) errors[name] = errorMessage;\r\n    else delete errors[name];\r\n\r\n    setBookData((prevBookData) => {\r\n      return {\r\n        bookData: { ...prevBookData.bookData, [name]: value },\r\n        errorData: errors,\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const errors = validate();\r\n    setBookData((prevBookData) => {\r\n      return {\r\n        bookData,\r\n        errorData: errors,\r\n      };\r\n    });\r\n    if (errors) return;\r\n\r\n    let { title, authors, publisher, publishedDate } = bookData;\r\n\r\n    addNewBook({\r\n      [\"volumeInfo\"]: {\r\n        title,\r\n        authors: authors.split(\",\"),\r\n        publisher,\r\n        publishedDate,\r\n      },\r\n    });\r\n    history.replace(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          name=\"title\"\r\n          value={bookData.title}\r\n          label=\"Title\"\r\n          onChange={handleChange}\r\n          error={errorData[\"title\"]}\r\n        />\r\n        <Input\r\n          name=\"authors\"\r\n          value={bookData.authors}\r\n          label=\"Authors\"\r\n          onChange={handleChange}\r\n          error={errorData[\"authors\"]}\r\n        />\r\n        <Input\r\n          name=\"publisher\"\r\n          value={bookData.publisher}\r\n          label=\"Publisher\"\r\n          onChange={handleChange}\r\n          error={errorData[\"publisher\"]}\r\n        />\r\n        <Input\r\n          name=\"publishedDate\"\r\n          value={bookData.publishedDate}\r\n          label=\"Published Date\"\r\n          onChange={handleChange}\r\n          error={errorData[\"publishedDate\"]}\r\n        />\r\n\r\n        <Button variant=\"primary\" disabled={validate()} type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddBookForm;\r\n","import React from 'react';\r\n\r\nfunction NotFound(props) {\r\n    return (\r\n        <div className=\"m-3\">\r\n            <p>404 Page Not Found</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\nimport BooksNavbar from './components/BooksNavbar';\nimport ContentArea from './components/ContentArea';\nimport AddBookForm from './components/AddBookForm';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  return (\n   <React.Fragment>\n      <BooksNavbar />\n      <main>\n        <Switch>\n          <Route path=\"/booklist\" component={ContentArea}></Route>\n          <Route path=\"/form/new\" component={AddBookForm}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/booklist\" />\n          <Redirect to=\"/not-found\"/>\n        </Switch>\n      </main>\n   </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}